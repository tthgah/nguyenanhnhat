import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.cluster import AgglomerativeClustering
from scipy.cluster.hierarchy import dendrogram, linkage

st.set_page_config(page_title="Nike Sales Visualization", layout="wide")

st.title("üìä Nike Shoe Sales Clustering & Visualization")

# D·ªØ li·ªáu m·∫´u t√≠ch h·ª£p s·∫µn (gi·∫£ l·∫≠p t·ª´ file nike shoe sales data.csv)
data = {
    'Product': ['Air Max', 'Revolution', 'Pegasus', 'ZoomX', 'React'],
    'Category': ['Running', 'Running', 'Running', 'Training', 'Casual'],
    'Price': [120, 90, 100, 140, 110],
    'Units Sold': [500, 300, 400, 200, 250],
    'Revenue': [60000, 27000, 40000, 28000, 27500]
}
df = pd.DataFrame(data)

# Encode d·ªØ li·ªáu d·∫°ng object ‚Üí s·ªë
le = LabelEncoder()
for col in df.select_dtypes(include='object'):
    df[col] = le.fit_transform(df[col])
    
# Chu·∫©n h√≥a d·ªØ li·ªáu
scaler = StandardScaler()
df_scaled = scaler.fit_transform(df)

# √Åp d·ª•ng Agglomerative Clustering
model = AgglomerativeClustering(n_clusters=3)
df['Cluster'] = model.fit_predict(df_scaled)

# Bi·ªÉu ƒë·ªì 1: Revenue by Product
st.subheader("1Ô∏è‚É£ Revenue by Product")
fig1, ax1 = plt.subplots()
sns.barplot(x='Product', y='Revenue', data=df, ax=ax1)
st.pyplot(fig1)

# Bi·ªÉu ƒë·ªì 2: Revenue by Category
st.subheader("2Ô∏è‚É£ Revenue by Category")
fig2, ax2 = plt.subplots()
sns.barplot(x='Category', y='Revenue', data=df, ax=ax2)
st.pyplot(fig2)

# Bi·ªÉu ƒë·ªì 3: Price vs Units Sold (c√≥ ph√¢n c·ª•m)
st.subheader("3Ô∏è‚É£ Price vs Units Sold")
fig3, ax3 = plt.subplots()
sns.scatterplot(x='Price', y='Units Sold', hue='Cluster', data=df, ax=ax3)
st.pyplot(fig3)

# Bi·ªÉu ƒë·ªì 4: Heatmap t∆∞∆°ng quan
st.subheader("4Ô∏è‚É£ Correlation Heatmap")
fig4, ax4 = plt.subplots()
sns.heatmap(df.corr(), annot=True, cmap='coolwarm', ax=ax4)
st.pyplot(fig4)

# Bi·ªÉu ƒë·ªì 5: Dendrogram
st.subheader("5Ô∏è‚É£ Dendrogram")
linked = linkage(df_scaled, method='ward')
fig5, ax5 = plt.subplots(figsize=(10, 5))
dendrogram(linked, ax=ax5)
st.pyplot(fig5)
